{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2020-11-04T16:07:10.347871-08:00",
            "magic": "edb82401dc4d5dc5fdd86767ab7f427143cf70891d9ac40673af9ae34b9022ce",
            "version": "v2.12.1"
        },
        "secrets_providers": {
            "type": "service",
            "state": {
                "url": "https://api.pulumi.com",
                "owner": "jaxxstorm",
                "project": "aws-load-balancer-controller",
                "stack": "dev"
            }
        },
        "resources": [
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "custom": false,
                "type": "pulumi:pulumi:Stack"
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:pulumi::default",
                "custom": true,
                "id": "ba6989dc-de55-4ac7-8655-d47f96f69df7",
                "type": "pulumi:providers:pulumi"
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:yaml:ConfigFile::foo-crd",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev"
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::jaxxstorm:aws:loadbalancercontroller::foo",
                "custom": false,
                "type": "jaxxstorm:aws:loadbalancercontroller",
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev"
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:aws::default_3_11_0",
                "custom": true,
                "id": "abf135ad-082a-44bb-8d13-e7a079f0ff76",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "region": "us-west-2",
                    "version": "3.11.0"
                },
                "outputs": {
                    "region": "us-west-2",
                    "version": "3.11.0"
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:StackReference::jaxxstorm/eks/dev",
                "custom": true,
                "id": "jaxxstorm/eks/dev",
                "type": "pulumi:pulumi:StackReference",
                "inputs": {
                    "name": "jaxxstorm/eks/dev"
                },
                "outputs": {
                    "name": "jaxxstorm/eks/dev",
                    "outputs": {
                        "clusterName": "lbriggs-dev",
                        "clusterOidcProvider": "oidc.eks.us-west-2.amazonaws.com/id/D44327129020EB30C8453DC93364756E",
                        "clusterOidcProviderArn": "arn:aws:iam::616138583583:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/D44327129020EB30C8453DC93364756E",
                        "kubeconfig": {
                            "apiVersion": "v1",
                            "clusters": [
                                {
                                    "cluster": {
                                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01UQXpNREl3TWpNek4xb1hEVE13TVRBeU9ESXdNak16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE92CmI2L1Y5OEtWY3RqSkNDZ3ZtWjVNaU95ZEdzazZYREp4aDNWRUxhaGF3RG9TZWZTRlQwRXpKRjNGdlVmZGVhRVIKQmdkYUh5dTlrZ1ZzYm1HN1ZIRkd2Yi9TVzFTSjVQOXYyUXR5N21MdWVDaGVpMkJBSU5aaDdPZzdiL0VTSmlsNQpJeUk4bE1WeDdweG8zb1MralhWbWtXN2ZNbkZvTC9hVFRkR2ZRaDVLQ0puTU13WjY3bHd4d2NMS0ZmbCtucUJuCmlxWUo4c1UzN1EzaXdKbXo5ak51a3hmWGo4c2JhWkN3a0Yra2h4WWYyVXJEWmFSbyt6MVJzMzlnaTFNS2hveisKWVFZZ1RIbmhrTjc2RHBXOTF6WXYwRnJIQUxvdnhVekNjM2hBWk5pUFpNalFkUVM2VE95QUwxZ0d1dDQ1cDJYRQpzNWUrRzNtOWd0ZnZTR1ZqWHAwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKa2JqcnF0Q3RNcGlzV1QyU0o3eGNVRXRJaDEKTk41Nlk5RlhSVklmNU0wQ0JWRms5SlBnbEZIU0FQUnJqeTVyaElHSkJiWWx2REJLTjJyMVpkdWQvRHhrSERiVwpRakI3WkVwTG9OcGp2Si9rZVhMWjRuMjVOWHM2VkhwOENCeEtsRHZqSVhqREd5VFdza3RDb01ZR2dCcUJYQzE2CkN1Q3BBNHZpR0VTdEJ3Qkk3aGRGTEQ4c2ZpWGZIc2phRzVMTE1sZVpzRVJtRlZCQkd1aUM4WlR1ZytBVi9KaFkKL09rQ1ZSMXFMajA4VEJNbWY5UGVvTFIzNEswS3M2RmsxT0VWbGtabUJrdUF2OHBha1UxSTExY0VYTFQrMDl1aQpFUUZ4NFJvdDlEZ2dsei9MdzNmcEYva1llTHlsT0NESUZuM1VXOHhFYm5HVTg0cmdnc0haTWQrZDVXTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                        "server": "https://D44327129020EB30C8453DC93364756E.gr7.us-west-2.eks.amazonaws.com"
                                    },
                                    "name": "kubernetes"
                                }
                            ],
                            "contexts": [
                                {
                                    "context": {
                                        "cluster": "kubernetes",
                                        "user": "aws"
                                    },
                                    "name": "aws"
                                }
                            ],
                            "current-context": "aws",
                            "kind": "Config",
                            "users": [
                                {
                                    "name": "aws",
                                    "user": {
                                        "exec": {
                                            "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                            "args": [
                                                "eks",
                                                "get-token",
                                                "--cluster-name",
                                                "lbriggs-dev"
                                            ],
                                            "command": "aws",
                                            "env": [
                                                {
                                                    "name": "AWS_PROFILE",
                                                    "value": "pulumi-dev-sandbox"
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "secretOutputNames": []
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "external": true,
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:pulumi::default::ba6989dc-de55-4ac7-8655-d47f96f69df7"
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:tls::default_2_4_0",
                "custom": true,
                "id": "20c42726-90bc-4294-b626-861c8ba09d1a",
                "type": "pulumi:providers:tls",
                "inputs": {
                    "version": "2.4.0"
                },
                "outputs": {
                    "version": "2.4.0"
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:kubernetes::default_2_6_3",
                "custom": true,
                "id": "58f58fe6-eeff-4aa7-959b-e6da00ee70bf",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "version": "2.6.3"
                },
                "outputs": {
                    "version": "2.6.3"
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::tls:index/privateKey:PrivateKey::foo-cert-privatekey",
                "custom": true,
                "id": "cf0d4352206e08c7e8840cde54092443e4e37630",
                "type": "tls:index/privateKey:PrivateKey",
                "inputs": {
                    "__defaults": [],
                    "algorithm": "RSA",
                    "ecdsaCurve": "P256",
                    "rsaBits": 2048
                },
                "outputs": {
                    "algorithm": "RSA",
                    "ecdsaCurve": "P256",
                    "id": "cf0d4352206e08c7e8840cde54092443e4e37630",
                    "privateKeyPem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt7Za4Hv67pPewc1jhTeAEzbOUCGSxB8hB6idlkCZ4sw0CUpJ\nG+7bUlisTv3ltmgLXOtko12KRPkx2TLzWzFm2A20Kq8kQ9Ouxf5jYg7yuZdk6Ro0\nPmgLLCuxAXCmDn7bVNVKugSXGmpg7RI0ZXE+3OKYL9rJvsrheHQgEKdTiVozNwgI\nZcuGtA72lyRIEbsklTKAop/Xi847uh+DVkkN7NSx+Rd5phUSVWbxrJxmIFzxBwER\nmSUM22x/MQEXEe6GWmfDtuFZylVh44r2iMWyy29ho3tBY/VrNjypmG+JParxclpn\nLcj4ofpNSwhVM86/2l4DtR4C9PCOzPYmiU4UvwIDAQABAoIBAQCiT1yvJRqomsCe\nXYZl9okTcMKLDX6MBCy8hX7ldyH+vQfkhVtecIQZlvp1t+Cybe5MJDUAGO7GzZv7\nGAbmNRl2HXVmmOLjgizSBVVtF2PgESA4yswJrwbf+aIjcZFlETNbGi8xdkjCL+Z+\nziy4y3sM0K5A6X6BMOJP99k0nYEywZsMZWXymLeoee3Wi8K8DEwvuWxWECMOYzPn\nBwSLz/F+YyyIZCla22VIqYkrGIDhSIPu9+XiZCivSbBaNeKNwOlylUhERScTfk6b\nyft+tp1D0aZcQFOxNLjlP/zSTS7Yi137LgO3leOrnhFPi206i+eJGDV/iAFw5RU2\nUgvyMm1hAoGBAMHeczF3KmmtvnB6AjojWF77F4USKr1kOivVbzOBw+aeLd+WJ9IT\nqzxujDPe0SoXdW3tCH4vWav0vKdVghV7dx4hBtEz+3b1cL4Peh5G9m+JGZizelzY\nqmI1SB6ucz4eMbGLd72+jxRuyzZXTmXCQsDJA9tWYABbO9HJUU7Vx7G5AoGBAPKW\noKAJqrcZtUGt7B5BXk4suZ4KBbwDxhnE92ziDk3gespyoy07JuxsZkb5p349Xqak\nUCYA3muqOFRFr1qQF+TIPoLAqmV8ZlwABzotF1IRhTKfs5Lt/dbm78a0tZMeuJhc\nMLzGXLUtdIRfBvEEg3RA3TyYFpTaEYXCiieXqRY3AoGAWEcEyRdsFqbouqqz7Ok/\nSjCnqw50q7zByEft1NRX8eFBHjhvdXdDV8c2zD+/mp0H+cAfR+YjvOs6JDAJheKs\ngOmlAwnajXaBmenOP48sk+kn4KKJK1H1c7azWlUxYK27Dw9kvN/Sowk4O0xSBIAK\niWJ/ARc5q6/fc01qWq15uvECgYAXPfU/wA1aI51pIIe50lt9s+1Ixf8Mp3PobiWi\nifoC3hoFoXwezkcJac1WyX6RqsGRx7ZiHb0xpYpmEJMfYyTW55SNpHXu6T9JWztW\nCJHua/1N/10OG70xRMj+SbwHz26yMkr9Gygwt50tPYmFt//8OGa58nxfYJFDNoNU\nDcTGewKBgA5X5XTJwlcSCpxYA6HtiykxctOF30EDFyO2nx2mJZv/S/apuwgix4tV\nH+n2G0LvZJ2WNS3X4HSDh3SQq1RY6MjUZXYBQkDGxstZHVg+JHkSbsrdpIZJtdl5\nSM06o0zOJ3B2DgNFemJzzi8b+pbhwJNdc4JctFZlotR08LGW9dBE\n-----END RSA PRIVATE KEY-----\n",
                    "publicKeyFingerprintMd5": "b6:bc:a3:cd:6a:e9:3b:c0:0a:35:5d:1a:c8:6b:c2:83",
                    "publicKeyOpenssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3tlrge/ruk97BzWOFN4ATNs5QIZLEHyEHqJ2WQJnizDQJSkkb7ttSWKxO/eW2aAtc62SjXYpE+THZMvNbMWbYDbQqryRD067F/mNiDvK5l2TpGjQ+aAssK7EBcKYOfttU1Uq6BJcaamDtEjRlcT7c4pgv2sm+yuF4dCAQp1OJWjM3CAhly4a0DvaXJEgRuySVMoCin9eLzju6H4NWSQ3s1LH5F3mmFRJVZvGsnGYgXPEHARGZJQzbbH8xARcR7oZaZ8O24VnKVWHjivaIxbLLb2Gje0Fj9Ws2PKmYb4k9qvFyWmctyPih+k1LCFUzzr/aXgO1HgL08I7M9iaJThS/\n",
                    "publicKeyPem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Za4Hv67pPewc1jhTeA\nEzbOUCGSxB8hB6idlkCZ4sw0CUpJG+7bUlisTv3ltmgLXOtko12KRPkx2TLzWzFm\n2A20Kq8kQ9Ouxf5jYg7yuZdk6Ro0PmgLLCuxAXCmDn7bVNVKugSXGmpg7RI0ZXE+\n3OKYL9rJvsrheHQgEKdTiVozNwgIZcuGtA72lyRIEbsklTKAop/Xi847uh+DVkkN\n7NSx+Rd5phUSVWbxrJxmIFzxBwERmSUM22x/MQEXEe6GWmfDtuFZylVh44r2iMWy\ny29ho3tBY/VrNjypmG+JParxclpnLcj4ofpNSwhVM86/2l4DtR4C9PCOzPYmiU4U\nvwIDAQAB\n-----END PUBLIC KEY-----\n",
                    "rsaBits": 2048
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:tls::default_2_4_0::20c42726-90bc-4294-b626-861c8ba09d1a",
                "propertyDependencies": {
                    "algorithm": null,
                    "ecdsaCurve": null,
                    "rsaBits": null
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::tls:index/privateKey:PrivateKey::foo-ca-privatekey",
                "custom": true,
                "id": "49156fa5f0aefcb569c1f651ec812f7c077a21a2",
                "type": "tls:index/privateKey:PrivateKey",
                "inputs": {
                    "__defaults": [],
                    "algorithm": "RSA",
                    "ecdsaCurve": "P256",
                    "rsaBits": 2048
                },
                "outputs": {
                    "algorithm": "RSA",
                    "ecdsaCurve": "P256",
                    "id": "49156fa5f0aefcb569c1f651ec812f7c077a21a2",
                    "privateKeyPem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwZdbVeTAcEcgH0BwbhIWfjI1sPASjFvDKLtJHzKrWFwXd424\nPqBEO7h9TqS1ryy9JX7SGeCHHUHgAfLiodoeZ/IYytJu9ONqRsbpW6KkO5TmPoHx\nFYkvmuEvihd3v4shg65FNnPsAcE5zDEd1Rw/2X81qEDT36vDyEDd0yJURTsGdm4W\n9f3JHKfhZHq0zMaXwKCyNbKYnPpTqOjwPuL9VffXDfhIUXwDuxYoO1wKfKmzh3XY\nnJ72j7mBKAd3fG6Iz2x0671Ij5gn9ER8tYoRxXNQ1bxEeUW7GogrGlJ4vxXVwpD1\ngne3iIsOvFFbIJLSCca97RdM4IP26HCtQepIBwIDAQABAoIBADFcLDecWczG9dPC\nFGicSAvpNXNl4vTSuNH73ssLmlCvOnSLN/0P1BX+FkUlDgYaPCgBTAS5EPpOv5T/\nnvVxresG+XdNbGkYSxK8yOdKcuGWN5acfyHklrTA0eQ905SNHwB6QL9/kx9naxs7\nMsYRq94C52V9EginvQWkNGsPB7mWv5CJ7f62sc2WoDcO8E7VKXKvSHhI/v/TjQOh\n/rM1iRGoih4PbTaoT5T9g9BeinyQrhKKeqIRS7IUkxutvPyZzKNZj4nxKOgZQblV\nCZ5RtPU2yBQ5coHL96JZ22JfzRtqvn4kYnBC6N8jHLNpCgAVoUbx2R63QbPVb5wn\nGca93ZECgYEA6Er59e5YE+ec68tvnlth9RgFdlvfOzgZBdar1Q8yrurUNagGnfcJ\ntutTjxsbmpeQn+C+mnXX903WxhfStrFVXcHafmKAZTjfbHRX+/m6JIoSUY9lGx2E\nxL/iuIfySNOGLxQaZw00rhmHkyDVSDcjVGSJvB+ItTVmV9avb7iOdmMCgYEA1Vk8\n8Aav14UhTJcv7VO9y2HJDdXxR9838SWQoGwzIuQVJBnHdEWWc7RxW7l6hJ8Y+Z5v\nOFJJpq+LFMY6MmcLqt3r4PkQeiluxPVjIK+gsLvbmZg/1UMkbfgViLDIjl2bU5JC\ntEIiFMUVIlgUdRD3mt4W64ynrjP3+RD6WuR1Nw0CgYBrj1wSvlxWSybkH/z9LH89\nR/Qvi/bfqugbRf2m2DS1vdKpTbZSqrL62hiE6R5tBMVY4m4fg3WO86IBc8KECbTn\nhv2vC9k8BYue4nhjGo1QogY9cdJ1LcPufpNysrBDfH5jikF3eivsebHHNKrNl4pq\nZ2tHiqp4jdNn1ObDKof81QKBgEiuC9phDMpI6h0jbApXetKsT0fNWFL5sh8OgwSD\nl7ANLz6LIa10f1qPYAa1Ww2O/X0cAhuXvMtyBdlf5jeBbzIYQ+DyODDFqJykU86w\nxfcvKBJdEXHfW6uy1fMo9km5jc6chujNlrqooRiAFQgEbbVubzRzSDRKM/G/XOpV\n5bCJAoGBAJ7LEKau0v+5eWQDcaSF3/ZaapNxN7r0UZfI5aK12g9H+Y51R08gSyEW\nh9E0zXtF1okUJu/7Ou4rQW8nIoGV8PTtUeVdfO+pwymOi+O48NuimKGrM7rgE7Yn\nU4wjhEL3lmeXPjhee4hivFEI6LPT14SvsyG4NCslLOnFuLaBi0jH\n-----END RSA PRIVATE KEY-----\n",
                    "publicKeyFingerprintMd5": "2d:aa:fa:ca:77:5f:9c:da:b5:4e:b2:43:b4:fd:11:77",
                    "publicKeyOpenssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBl1tV5MBwRyAfQHBuEhZ+MjWw8BKMW8Mou0kfMqtYXBd3jbg+oEQ7uH1OpLWvLL0lftIZ4IcdQeAB8uKh2h5n8hjK0m7042pGxulboqQ7lOY+gfEViS+a4S+KF3e/iyGDrkU2c+wBwTnMMR3VHD/ZfzWoQNPfq8PIQN3TIlRFOwZ2bhb1/ckcp+FkerTMxpfAoLI1spic+lOo6PA+4v1V99cN+EhRfAO7Fig7XAp8qbOHddicnvaPuYEoB3d8bojPbHTrvUiPmCf0RHy1ihHFc1DVvER5RbsaiCsaUni/FdXCkPWCd7eIiw68UVsgktIJxr3tF0zgg/bocK1B6kgH\n",
                    "publicKeyPem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwZdbVeTAcEcgH0BwbhIW\nfjI1sPASjFvDKLtJHzKrWFwXd424PqBEO7h9TqS1ryy9JX7SGeCHHUHgAfLiodoe\nZ/IYytJu9ONqRsbpW6KkO5TmPoHxFYkvmuEvihd3v4shg65FNnPsAcE5zDEd1Rw/\n2X81qEDT36vDyEDd0yJURTsGdm4W9f3JHKfhZHq0zMaXwKCyNbKYnPpTqOjwPuL9\nVffXDfhIUXwDuxYoO1wKfKmzh3XYnJ72j7mBKAd3fG6Iz2x0671Ij5gn9ER8tYoR\nxXNQ1bxEeUW7GogrGlJ4vxXVwpD1gne3iIsOvFFbIJLSCca97RdM4IP26HCtQepI\nBwIDAQAB\n-----END PUBLIC KEY-----\n",
                    "rsaBits": 2048
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:tls::default_2_4_0::20c42726-90bc-4294-b626-861c8ba09d1a",
                "propertyDependencies": {
                    "algorithm": null,
                    "ecdsaCurve": null,
                    "rsaBits": null
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::aws:iam/role:Role::foo-role",
                "custom": true,
                "id": "foo-role-fa43964",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "name",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::616138583583:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/D44327129020EB30C8453DC93364756E\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/D44327129020EB30C8453DC93364756E:sub\":\"system:serviceaccount:aws-load-balancer-controller:foo-serviceaccount\"}}}]}",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "name": "foo-role-fa43964",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::616138583583:role/foo-role-fa43964",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::616138583583:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/D44327129020EB30C8453DC93364756E\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/D44327129020EB30C8453DC93364756E:sub\":\"system:serviceaccount:aws-load-balancer-controller:foo-serviceaccount\"}}}]}",
                    "createDate": "2020-11-02T03:29:16Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "foo-role-fa43964",
                    "maxSessionDuration": 3600,
                    "name": "foo-role-fa43964",
                    "path": "/",
                    "tags": {},
                    "uniqueId": "AROAY65FYVYP5E5P37WGY"
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:aws::default_3_11_0::abf135ad-082a-44bb-8d13-e7a079f0ff76",
                "propertyDependencies": {
                    "assumeRolePolicy": null
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:core/v1:Service::foo-webhook-service",
                "custom": true,
                "id": "aws-load-balancer-controller/foo-webhook-service-dghuhb5i",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true",
                            "pulumi.com/skipAwait": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "foo-webhook-service-dghuhb5i",
                        "namespace": "aws-load-balancer-controller"
                    },
                    "spec": {
                        "ports": [
                            {
                                "port": 443,
                                "targetPort": 9443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true",
                                "pulumi.com/skipAwait": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "foo",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "aws-load-balancer-controller"
                            },
                            "name": "foo-webhook-service-dghuhb5i",
                            "namespace": "aws-load-balancer-controller"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 443,
                                    "targetPort": 9443
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "foo",
                                "app.kubernetes.io/name": "aws-load-balancer-controller"
                            }
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\",\"pulumi.com/skipAwait\":\"true\"},\"labels\":{\"app.kubernetes.io/instance\":\"foo\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"name\":\"foo-webhook-service-dghuhb5i\",\"namespace\":\"aws-load-balancer-controller\"},\"spec\":{\"ports\":[{\"port\":443,\"targetPort\":9443}],\"selector\":{\"app.kubernetes.io/instance\":\"foo\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"}}}\n",
                            "pulumi.com/autonamed": "true",
                            "pulumi.com/skipAwait": "true"
                        },
                        "creationTimestamp": "2020-11-02T03:29:18Z",
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "foo-webhook-service-dghuhb5i",
                        "namespace": "aws-load-balancer-controller",
                        "resourceVersion": "740525",
                        "selfLink": "/api/v1/namespaces/aws-load-balancer-controller/services/foo-webhook-service-dghuhb5i",
                        "uid": "4e879026-b792-46fa-8288-9a1942161629"
                    },
                    "spec": {
                        "clusterIP": "10.100.170.87",
                        "ports": [
                            {
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": 9443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:kubernetes::default_2_6_3::58f58fe6-eeff-4aa7-959b-e6da00ee70bf",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:rbac.authorization.k8s.io/v1:Role::foo-role",
                "custom": true,
                "id": "aws-load-balancer-controller/foo-role-l0ofpo7r",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "foo-role-l0ofpo7r",
                        "namespace": "aws-load-balancer-controller"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "aws-load-balancer-controller-leader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "foo",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "aws-load-balancer-controller"
                            },
                            "name": "foo-role-l0ofpo7r",
                            "namespace": "aws-load-balancer-controller"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "aws-load-balancer-controller-leader"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app.kubernetes.io/instance\":\"foo\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"name\":\"foo-role-l0ofpo7r\",\"namespace\":\"aws-load-balancer-controller\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"aws-load-balancer-controller-leader\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"patch\",\"update\"]}]}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2020-11-02T03:29:18Z",
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "foo-role-l0ofpo7r",
                        "namespace": "aws-load-balancer-controller",
                        "resourceVersion": "740529",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/aws-load-balancer-controller/roles/foo-role-l0ofpo7r",
                        "uid": "cba0d1de-d99a-4346-919a-ad9220f4808c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "aws-load-balancer-controller-leader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:kubernetes::default_2_6_3::58f58fe6-eeff-4aa7-959b-e6da00ee70bf",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                },
                "aliases": [
                    "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:rbac.authorization.k8s.io/v1alpha1:Role::foo-role",
                    "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:rbac.authorization.k8s.io/v1beta1:Role::foo-role"
                ]
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::foo-clusterrole",
                "custom": true,
                "id": "foo-clusterrole-4bbvdpwy",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "foo-clusterrole-4bbvdpwy"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "elbv2.k8s.aws"
                            ],
                            "resources": [
                                "targetgroupbindings"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "",
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "services",
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "secrets",
                                "namespaces",
                                "endpoints"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "elbv2.k8s.aws",
                                "",
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "targetgroupbindings/status",
                                "pods/status",
                                "services/status",
                                "ingresses/status"
                            ],
                            "verbs": [
                                "update",
                                "patch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "foo",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "aws-load-balancer-controller"
                            },
                            "name": "foo-clusterrole-4bbvdpwy"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "elbv2.k8s.aws"
                                ],
                                "resources": [
                                    "targetgroupbindings"
                                ],
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "extensions",
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "services",
                                    "ingresses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "secrets",
                                    "namespaces",
                                    "endpoints"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "elbv2.k8s.aws",
                                    "",
                                    "extensions",
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "targetgroupbindings/status",
                                    "pods/status",
                                    "services/status",
                                    "ingresses/status"
                                ],
                                "verbs": [
                                    "update",
                                    "patch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app.kubernetes.io/instance\":\"foo\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"name\":\"foo-clusterrole-4bbvdpwy\"},\"rules\":[{\"apiGroups\":[\"elbv2.k8s.aws\"],\"resources\":[\"targetgroupbindings\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\",\"extensions\",\"networking.k8s.io\"],\"resources\":[\"services\",\"ingresses\"],\"verbs\":[\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"secrets\",\"namespaces\",\"endpoints\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"elbv2.k8s.aws\",\"\",\"extensions\",\"networking.k8s.io\"],\"resources\":[\"targetgroupbindings/status\",\"pods/status\",\"services/status\",\"ingresses/status\"],\"verbs\":[\"update\",\"patch\"]}]}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2020-11-02T03:29:18Z",
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "foo-clusterrole-4bbvdpwy",
                        "resourceVersion": "740521",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/foo-clusterrole-4bbvdpwy",
                        "uid": "93658810-32b1-4141-b658-bddd39b02b20"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "elbv2.k8s.aws"
                            ],
                            "resources": [
                                "targetgroupbindings"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "",
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "services",
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "secrets",
                                "namespaces",
                                "endpoints"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "elbv2.k8s.aws",
                                "",
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "targetgroupbindings/status",
                                "pods/status",
                                "services/status",
                                "ingresses/status"
                            ],
                            "verbs": [
                                "update",
                                "patch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:kubernetes::default_2_6_3::58f58fe6-eeff-4aa7-959b-e6da00ee70bf",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                },
                "aliases": [
                    "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRole::foo-clusterrole",
                    "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRole::foo-clusterrole"
                ]
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:core/v1:Namespace::foo-namespace",
                "custom": true,
                "id": "aws-load-balancer-controller",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "aws-load-balancer-controller"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "foo",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "aws-load-balancer-controller"
                            },
                            "name": "aws-load-balancer-controller"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"foo\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"name\":\"aws-load-balancer-controller\"}}\n"
                        },
                        "creationTimestamp": "2020-11-02T03:29:18Z",
                        "labels": {
                            "app.kubernetes.io/instance": "foo",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "aws-load-balancer-controller"
                        },
                        "name": "aws-load-balancer-controller",
                        "resourceVersion": "740522",
                        "selfLink": "/api/v1/namespaces/aws-load-balancer-controller",
                        "uid": "90045687-b685-4848-bfdb-faa05a0aa1cd"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:pulumi:Stack::aws-load-balancer-controller-dev",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:kubernetes::default_2_6_3::58f58fe6-eeff-4aa7-959b-e6da00ee70bf",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition::targetgroupbindings.elbv2.k8s.aws",
                "custom": true,
                "id": "targetgroupbindings.elbv2.k8s.aws",
                "type": "kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1beta1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.4.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "targetgroupbindings.elbv2.k8s.aws"
                    },
                    "spec": {
                        "additionalPrinterColumns": [
                            {
                                "JSONPath": ".spec.serviceRef.name",
                                "description": "The Kubernetes Service's name",
                                "name": "SERVICE-NAME",
                                "type": "string"
                            },
                            {
                                "JSONPath": ".spec.serviceRef.port",
                                "description": "The Kubernetes Service's port",
                                "name": "SERVICE-PORT",
                                "type": "string"
                            },
                            {
                                "JSONPath": ".spec.targetType",
                                "description": "The AWS TargetGroup's TargetType",
                                "name": "TARGET-TYPE",
                                "type": "string"
                            },
                            {
                                "JSONPath": ".spec.targetGroupARN",
                                "description": "The AWS TargetGroup's Amazon Resource Name",
                                "name": "ARN",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "JSONPath": ".metadata.creationTimestamp",
                                "name": "AGE",
                                "type": "date"
                            }
                        ],
                        "group": "elbv2.k8s.aws",
                        "names": {
                            "categories": [
                                "all"
                            ],
                            "kind": "TargetGroupBinding",
                            "listKind": "TargetGroupBindingList",
                            "plural": "targetgroupbindings",
                            "singular": "targetgroupbinding"
                        },
                        "scope": "Namespaced",
                        "subresources": {
                            "status": {}
                        },
                        "validation": {
                            "openAPIV3Schema": {
                                "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
                                        "properties": {
                                            "networking": {
                                                "description": "networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.",
                                                "properties": {
                                                    "ingress": {
                                                        "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                                        "items": {
                                                            "properties": {
                                                                "from": {
                                                                    "description": "List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.",
                                                                    "items": {
                                                                        "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                                                                        "properties": {
                                                                            "ipBlock": {
                                                                                "description": "IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.",
                                                                                "properties": {
                                                                                    "cidr": {
                                                                                        "description": "CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "cidr"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "securityGroup": {
                                                                                "description": "SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.",
                                                                                "properties": {
                                                                                    "groupID": {
                                                                                        "description": "GroupID is the EC2 SecurityGroupID.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "groupID"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ports": {
                                                                    "description": "List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.",
                                                                    "items": {
                                                                        "properties": {
                                                                            "port": {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    {
                                                                                        "type": "string"
                                                                                    }
                                                                                ],
                                                                                "description": "The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.",
                                                                                "x-kubernetes-int-or-string": true
                                                                            },
                                                                            "protocol": {
                                                                                "description": "The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.",
                                                                                "enum": [
                                                                                    "TCP",
                                                                                    "UDP"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "from",
                                                                "ports"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "serviceRef": {
                                                "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
                                                "properties": {
                                                    "name": {
                                                        "description": "Name is the name of the Service.",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "anyOf": [
                                                            {
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "description": "Port is the port of the ServicePort.",
                                                        "x-kubernetes-int-or-string": true
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "port"
                                                ],
                                                "type": "object"
                                            },
                                            "targetGroupARN": {
                                                "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
                                                "type": "string"
                                            },
                                            "targetType": {
                                                "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
                                                "enum": [
                                                    "instance",
                                                    "ip"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "serviceRef",
                                            "targetGroupARN"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
                                        "properties": {
                                            "observedGeneration": {
                                                "description": "The generation observed by the TargetGroupBinding controller.",
                                                "format": "int64",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "version": "v1alpha1",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1beta1",
                                "served": true,
                                "storage": true
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1beta1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.4.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "targetgroupbindings.elbv2.k8s.aws"
                        },
                        "spec": {
                            "additionalPrinterColumns": [
                                {
                                    "JSONPath": ".spec.serviceRef.name",
                                    "description": "The Kubernetes Service's name",
                                    "name": "SERVICE-NAME",
                                    "type": "string"
                                },
                                {
                                    "JSONPath": ".spec.serviceRef.port",
                                    "description": "The Kubernetes Service's port",
                                    "name": "SERVICE-PORT",
                                    "type": "string"
                                },
                                {
                                    "JSONPath": ".spec.targetType",
                                    "description": "The AWS TargetGroup's TargetType",
                                    "name": "TARGET-TYPE",
                                    "type": "string"
                                },
                                {
                                    "JSONPath": ".spec.targetGroupARN",
                                    "description": "The AWS TargetGroup's Amazon Resource Name",
                                    "name": "ARN",
                                    "priority": 1,
                                    "type": "string"
                                },
                                {
                                    "JSONPath": ".metadata.creationTimestamp",
                                    "name": "AGE",
                                    "type": "date"
                                }
                            ],
                            "group": "elbv2.k8s.aws",
                            "names": {
                                "categories": [
                                    "all"
                                ],
                                "kind": "TargetGroupBinding",
                                "listKind": "TargetGroupBindingList",
                                "plural": "targetgroupbindings",
                                "singular": "targetgroupbinding"
                            },
                            "scope": "Namespaced",
                            "subresources": {
                                "status": {}
                            },
                            "validation": {
                                "openAPIV3Schema": {
                                    "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
                                    "properties": {
                                        "apiVersion": {
                                            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                            "type": "string"
                                        },
                                        "kind": {
                                            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                            "type": "string"
                                        },
                                        "metadata": {
                                            "type": "object"
                                        },
                                        "spec": {
                                            "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
                                            "properties": {
                                                "networking": {
                                                    "description": "networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.",
                                                    "properties": {
                                                        "ingress": {
                                                            "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                                            "items": {
                                                                "properties": {
                                                                    "from": {
                                                                        "description": "List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.",
                                                                        "items": {
                                                                            "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                                                                            "properties": {
                                                                                "ipBlock": {
                                                                                    "description": "IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.",
                                                                                    "properties": {
                                                                                        "cidr": {
                                                                                            "description": "CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "cidr"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "securityGroup": {
                                                                                    "description": "SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.",
                                                                                    "properties": {
                                                                                        "groupID": {
                                                                                            "description": "GroupID is the EC2 SecurityGroupID.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "groupID"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "ports": {
                                                                        "description": "List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        {
                                                                                            "type": "string"
                                                                                        }
                                                                                    ],
                                                                                    "description": "The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.",
                                                                                    "x-kubernetes-int-or-string": true
                                                                                },
                                                                                "protocol": {
                                                                                    "description": "The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.",
                                                                                    "enum": [
                                                                                        "TCP",
                                                                                        "UDP"
                                                                                    ],
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "from",
                                                                    "ports"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "serviceRef": {
                                                    "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name is the name of the Service.",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "integer"
                                                                },
                                                                {
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "description": "Port is the port of the ServicePort.",
                                                            "x-kubernetes-int-or-string": true
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "port"
                                                    ],
                                                    "type": "object"
                                                },
                                                "targetGroupARN": {
                                                    "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
                                                    "type": "string"
                                                },
                                                "targetType": {
                                                    "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
                                                    "enum": [
                                                        "instance",
                                                        "ip"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "serviceRef",
                                                "targetGroupARN"
                                            ],
                                            "type": "object"
                                        },
                                        "status": {
                                            "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
                                            "properties": {
                                                "observedGeneration": {
                                                    "description": "The generation observed by the TargetGroupBinding controller.",
                                                    "format": "int64",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "version": "v1alpha1",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1beta1",
                                    "served": true,
                                    "storage": true
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1beta1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.4.0",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.4.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"targetgroupbindings.elbv2.k8s.aws\"},\"spec\":{\"additionalPrinterColumns\":[{\"JSONPath\":\".spec.serviceRef.name\",\"description\":\"The Kubernetes Service's name\",\"name\":\"SERVICE-NAME\",\"type\":\"string\"},{\"JSONPath\":\".spec.serviceRef.port\",\"description\":\"The Kubernetes Service's port\",\"name\":\"SERVICE-PORT\",\"type\":\"string\"},{\"JSONPath\":\".spec.targetType\",\"description\":\"The AWS TargetGroup's TargetType\",\"name\":\"TARGET-TYPE\",\"type\":\"string\"},{\"JSONPath\":\".spec.targetGroupARN\",\"description\":\"The AWS TargetGroup's Amazon Resource Name\",\"name\":\"ARN\",\"priority\":1,\"type\":\"string\"},{\"JSONPath\":\".metadata.creationTimestamp\",\"name\":\"AGE\",\"type\":\"date\"}],\"group\":\"elbv2.k8s.aws\",\"names\":{\"categories\":[\"all\"],\"kind\":\"TargetGroupBinding\",\"listKind\":\"TargetGroupBindingList\",\"plural\":\"targetgroupbindings\",\"singular\":\"targetgroupbinding\"},\"scope\":\"Namespaced\",\"subresources\":{\"status\":{}},\"validation\":{\"openAPIV3Schema\":{\"description\":\"TargetGroupBinding is the Schema for the TargetGroupBinding API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TargetGroupBindingSpec defines the desired state of TargetGroupBinding\",\"properties\":{\"networking\":{\"description\":\"networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.\",\"properties\":{\"ingress\":{\"description\":\"List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.\",\"items\":{\"properties\":{\"from\":{\"description\":\"List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.\",\"items\":{\"description\":\"NetworkingPeer defines the source/destination peer for networking rules.\",\"properties\":{\"ipBlock\":{\"description\":\"IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.\",\"properties\":{\"cidr\":{\"description\":\"CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.\",\"type\":\"string\"}},\"required\":[\"cidr\"],\"type\":\"object\"},\"securityGroup\":{\"description\":\"SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.\",\"properties\":{\"groupID\":{\"description\":\"GroupID is the EC2 SecurityGroupID.\",\"type\":\"string\"}},\"required\":[\"groupID\"],\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"},\"ports\":{\"description\":\"List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.\",\"items\":{\"properties\":{\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.\",\"x-kubernetes-int-or-string\":true},\"protocol\":{\"description\":\"The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.\",\"enum\":[\"TCP\",\"UDP\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"required\":[\"from\",\"ports\"],\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"serviceRef\":{\"description\":\"serviceRef is a reference to a Kubernetes Service and ServicePort.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Service.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Port is the port of the ServicePort.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"name\",\"port\"],\"type\":\"object\"},\"targetGroupARN\":{\"description\":\"targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.\",\"type\":\"string\"},\"targetType\":{\"description\":\"targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.\",\"enum\":[\"instance\",\"ip\"],\"type\":\"string\"}},\"required\":[\"serviceRef\",\"targetGroupARN\"],\"type\":\"object\"},\"status\":{\"description\":\"TargetGroupBindingStatus defines the observed state of TargetGroupBinding\",\"properties\":{\"observedGeneration\":{\"description\":\"The generation observed by the TargetGroupBinding controller.\",\"format\":\"int64\",\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"version\":\"v1alpha1\",\"versions\":[{\"name\":\"v1alpha1\",\"served\":true,\"storage\":false},{\"name\":\"v1beta1\",\"served\":true,\"storage\":true}]}}\n"
                        },
                        "creationTimestamp": "2020-11-02T03:29:18Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "targetgroupbindings.elbv2.k8s.aws",
                        "resourceVersion": "740535",
                        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/targetgroupbindings.elbv2.k8s.aws",
                        "uid": "1d947682-9e9e-4575-a94b-c2aacb6ede98"
                    },
                    "spec": {
                        "additionalPrinterColumns": [
                            {
                                "JSONPath": ".spec.serviceRef.name",
                                "description": "The Kubernetes Service's name",
                                "name": "SERVICE-NAME",
                                "type": "string"
                            },
                            {
                                "JSONPath": ".spec.serviceRef.port",
                                "description": "The Kubernetes Service's port",
                                "name": "SERVICE-PORT",
                                "type": "string"
                            },
                            {
                                "JSONPath": ".spec.targetType",
                                "description": "The AWS TargetGroup's TargetType",
                                "name": "TARGET-TYPE",
                                "type": "string"
                            },
                            {
                                "JSONPath": ".spec.targetGroupARN",
                                "description": "The AWS TargetGroup's Amazon Resource Name",
                                "name": "ARN",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "JSONPath": ".metadata.creationTimestamp",
                                "name": "AGE",
                                "type": "date"
                            }
                        ],
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "elbv2.k8s.aws",
                        "names": {
                            "categories": [
                                "all"
                            ],
                            "kind": "TargetGroupBinding",
                            "listKind": "TargetGroupBindingList",
                            "plural": "targetgroupbindings",
                            "singular": "targetgroupbinding"
                        },
                        "preserveUnknownFields": true,
                        "scope": "Namespaced",
                        "subresources": {
                            "status": {}
                        },
                        "validation": {
                            "openAPIV3Schema": {
                                "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
                                        "properties": {
                                            "networking": {
                                                "description": "networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.",
                                                "properties": {
                                                    "ingress": {
                                                        "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
                                                        "items": {
                                                            "properties": {
                                                                "from": {
                                                                    "description": "List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.",
                                                                    "items": {
                                                                        "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                                                                        "properties": {
                                                                            "ipBlock": {
                                                                                "description": "IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.",
                                                                                "properties": {
                                                                                    "cidr": {
                                                                                        "description": "CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "cidr"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "securityGroup": {
                                                                                "description": "SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.",
                                                                                "properties": {
                                                                                    "groupID": {
                                                                                        "description": "GroupID is the EC2 SecurityGroupID.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "groupID"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ports": {
                                                                    "description": "List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.",
                                                                    "items": {
                                                                        "properties": {
                                                                            "port": {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    {
                                                                                        "type": "string"
                                                                                    }
                                                                                ],
                                                                                "description": "The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.",
                                                                                "x-kubernetes-int-or-string": true
                                                                            },
                                                                            "protocol": {
                                                                                "description": "The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.",
                                                                                "enum": [
                                                                                    "TCP",
                                                                                    "UDP"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "from",
                                                                "ports"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "serviceRef": {
                                                "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
                                                "properties": {
                                                    "name": {
                                                        "description": "Name is the name of the Service.",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "anyOf": [
                                                            {
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "description": "Port is the port of the ServicePort.",
                                                        "x-kubernetes-int-or-string": true
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "port"
                                                ],
                                                "type": "object"
                                            },
                                            "targetGroupARN": {
                                                "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
                                                "type": "string"
                                            },
                                            "targetType": {
                                                "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
                                                "enum": [
                                                    "instance",
                                                    "ip"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "serviceRef",
                                            "targetGroupARN"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
                                        "properties": {
                                            "observedGeneration": {
                                                "description": "The generation observed by the TargetGroupBinding controller.",
                                                "format": "int64",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "version": "v1alpha1",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1beta1",
                                "served": true,
                                "storage": true
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "all"
                            ],
                            "kind": "TargetGroupBinding",
                            "listKind": "TargetGroupBindingList",
                            "plural": "targetgroupbindings",
                            "singular": "targetgroupbinding"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2020-11-02T03:29:18Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2020-11-02T03:29:18Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1beta1"
                        ]
                    }
                },
                "parent": "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:yaml:ConfigFile::foo-crd",
                "provider": "urn:pulumi:dev::aws-load-balancer-controller::pulumi:providers:kubernetes::default_2_6_3::58f58fe6-eeff-4aa7-959b-e6da00ee70bf",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:dev::aws-load-balancer-controller::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::targetgroupbindings.elbv2.k8s.aws"
                ]
            }
        ]
    }
}
